name: Print File Contents

on:
  push:
    branches:
      - main

jobs:
  print-file-contents:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Setup Npm
      uses: actions/setup-node@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        node-version: 12
        registry-url: https://npm.pkg.github.com/
        always-auth: true
    - name: Check a single existing package
      if: 'false'
      run: |
        echo "Checking a single package"
        package_name="com.stillfront.sound"
        package_version="2.0.3"
        echo " - Checking if $package_name@$package_version exists"
        npm show --registry="https://npm.pkg.github.com/@Stillfront" "$package_name@$package_version" version
        if [ $? -eq 0 ]; then
          echo "Package $package_name@$package_version exists on the remote registry."
        else
          echo "Package $package_name@$package_version does not exist on the remote registry."
        fi
    - name: Print Package that would publish
      if: 'false'
      run: |
        echo "Checking each package"
        for folder in "Packages"/*; do
          if [ -d "$folder" ]; then
            file_to_print="$folder/package.json"
            if [ -e "$file_to_print" ]; then
                package_name=$(grep -oPm 1 '"name": "\K[^"]+' $file_to_print)
                package_version=$(grep -oPm 1 '"version": "\K[^"]+' $file_to_print)
                echo " - Checking if $package_name@$package_version exists"
                # Deactivate exit on error
                set +e
                npm show "$package_name@$package_version" version &> /dev/null
                exit_code=$?
                # Reactivate exit on error
                set -e
                if [ $exit_code -eq 0 ]; then
                  echo "Package $package_name@$package_version exists on the remote registry."
                else
                  echo "Package $package_name@$package_version does not exist on the remote registry ($exit_code)."
                fi
            else
                echo "File package.json not found in $folder"
            fi
          fi
        done
    - name: Publish packages to NPM
      run: |
        for folder in "Packages"/*; do
          if [ -d "$folder" ]; then
            file_to_publish="$folder/package.json"
        
            if [ -e "$file_to_publish" ]; then
                package_name=$(grep -oPm 1 '"name": "\K[^"]+' $file_to_publish)
                package_version=$(grep -oPm 1 '"version": "\K[^"]+' $file_to_publish)
        
                # Deactivate exit on error
                set +e
                npm show "$package_name@$package_version" version &> /dev/null
                exit_code=$?
                # Reactivate exit on error
                set -e
        
                if [ $exit_code -eq 0 ]; then
                  echo "Package $package_name@$package_version already exists."
                else
                  cd "$folder" || exit 1
                  # Deactivate exit on error
                  set +e
                  npm publish
                  # Reactivate exit on error
                  set -e
                  cd - || exit 2
                fi
            else
                echo "File package.json not found in $folder"
            fi
          fi
        done
        echo "Finished publishing all packages"